(ns search-blogs.views
  (:require [search-blogs.ya :as ya]
            [clojure.string :as str]
            [hiccup.page :as hic-p]))

(defn gen-page-head
  [title]
  [:head
   [:title (str title)]
   (hic-p/include-css "/css/styles.css")])

(def header-links
  [:div#header-links
   "[ "
   [:a {:href "/"} "Задача"]
   " | "
   [:a {:href "/search"} "Решение"]
   " ]"])

(defn home-page
  []
  (hic-p/html5
   (gen-page-head "Home")
   header-links
   [:h1 "Задача"]
   [:p "Необходимо разработать законченное веб-приложение, реализующее следующую функцию:"]
   [:ul
    [:li "Обслуживать HTTP запросы по URL \"/search\"."]
    [:li "Сервис должен обраться к API Яндекса поиска по форумам и блогам, по HTTP, получить ответ через RSS. В случае, если ключевых слов переданно больше одного, запросы должны выполняться параллельно (по одному HTTP запросу на ключевое слово). Должно быть ограничение на максимальное количество одновременных HTTP-соединений, это значение нельзя превышать. Если ключевых слов больше, нужно организовать очередь обработки так, чтобы более указанного количество соединений не открывалось. По каждому слову ищем только первые 10 записей."]
    [:li "Из каждого результата извлекаем основную ссылку (поле link). Из ссылки берем hostname, из которого берется только домен второго уровня"]
    [:li "В результате работы веб-сервиса должна быть возвращена статистика по доменам второго уровня - сколько раз в сумме использовался домен по всем ключевым словам. В случае, если по разным ключевым словам было найдены полностью идентичные ссылки, хост должен учитываться только один раз."]
    [:li "Результат должен быть предствлен в формате JSON. Выдача ответа с человеко-читаемым форматированием (pretty print) будет рассматриваться как плюс."]]))

(defn submit-word-page
  []
  (hic-p/html5
   (gen-page-head "Поиск")
   header-links
   [:h1 "Введите ключевые слова для поиска через запятую"]
   [:p "Запрос может содержать неограниченное число ключевых слов."]
   [:p "Если ключевое слово состоит из нескольких, введите его в обычном формате"]
   [:h2 "Пример запроса - clojure, pure functions, awesome"]
   [:form {:action "/search" :method "POST"}
    [:p "Ключевые слова: " [:input {:type "text" :name "words"}]]
    [:p [:input {:type "submit" :value "Искать!"}]]]))

(defn add-items-results-page
  [{:keys [words]}]
  (let [normalize-words (->> (str/split words #",")
                             (map #(str/trim %))
                             (map #(str/replace % " " "+"))
                             (into #{}))]
    (hic-p/html5
     (gen-page-head "Результаты поиска")
     header-links
     [:h1 "Статистика по ключевым словам"]
     [:h2 "Ключевые слова: " words]
     [:table
      [:tr [:th "Домен"] [:th "Число упоминаний"]]
      (for [[k v] (ya/frequency-stat normalize-words)]
        [:tr [:td k] [:td v]])])))
